// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `generate_properties.py`.

#include <QtTest>

#include "../BorderProperty.h"

#include "CreateTestInstances.h"

using namespace Union::Properties;
using namespace Qt::StringLiterals;

class TestBorderProperty : public QObject
{
    Q_OBJECT
private Q_SLOTS:
    void testEmpty()
    {
        BorderProperty property;

        // An empty instance should have no values set.
        QVERIFY(!property.size().has_value());
        QVERIFY(!property.color().has_value());
        QVERIFY(!property.style().has_value());
        QVERIFY(!property.image().has_value());
    }

    void testHasAnyValue()
    {
        BorderProperty property;

        // An empty instance should not have any values.
        QVERIFY(!property.hasAnyValue());

        {
            qreal value;
            property.setSize(value);
            QVERIFY(property.hasAnyValue());
            property.setSize(std::nullopt);
            QVERIFY(!property.hasAnyValue());
        }
        {
            QColor value;
            property.setColor(value);
            QVERIFY(property.hasAnyValue());
            property.setColor(std::nullopt);
            QVERIFY(!property.hasAnyValue());
        }
        {
            Union::Properties::LineStyle value;
            property.setStyle(value);
            QVERIFY(property.hasAnyValue());
            property.setStyle(std::nullopt);
            QVERIFY(!property.hasAnyValue());
        }
        {
            // Assigning an empty property to a value should have no effect.
            property.setImage(ImageProperty{});
            QVERIFY(!property.hasAnyValue());

            property.setImage(testImagePropertyInstance());
            QVERIFY(property.hasAnyValue());

            property.setImage(std::nullopt);
            QVERIFY(!property.hasAnyValue());
        }
    }

    void testResolveProperties()
    {
        BorderProperty source;
        BorderProperty destination;

        QVERIFY(!source.hasAnyValue());
        QVERIFY(!destination.hasAnyValue());

        // Calling resolve on empty source and destination should have no effect.
        BorderProperty::resolveProperties(source, destination);

        QVERIFY(!destination.hasAnyValue());

        source.setSize(qreal{});
        source.setColor(QColor{});
        source.setStyle(Union::Properties::LineStyle{});
        source.setImage(testImagePropertyInstance());

        QVERIFY(source.hasAnyValue());
        QVERIFY(!destination.hasAnyValue());

        BorderProperty::resolveProperties(source, destination);

        QVERIFY(destination.hasAnyValue());

        QCOMPARE(destination.size(), source.size());
        QCOMPARE(destination.color(), source.color());
        QCOMPARE(destination.style(), source.style());
        QCOMPARE(destination.image(), source.image());
    }
};

QTEST_MAIN(TestBorderProperty)

#include "TestBorderProperty.moc"