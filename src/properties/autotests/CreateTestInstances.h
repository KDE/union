// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `generate_properties.py`.

#pragma once

#include <QtTest>

#include "../BackgroundProperty.h"
#include "../BorderProperty.h"
#include "../CornerProperty.h"
#include "../CornersProperty.h"
#include "../ImageProperty.h"
#include "../IndicatorProperty.h"
#include "../PaletteProperty.h"
#include "../ShadowProperty.h"
#include "../SizeProperty.h"
#include "../SizesProperty.h"
#include "../StyleProperty.h"
#include "../TextProperty.h"

using namespace Qt::StringLiterals;

namespace Union
{
namespace Properties
{

QColor testQColorInstance()
{
    return Qt::magenta;
}

qreal testQrealInstance()
{
    return 10.0;
}

QFont testQFontInstance()
{
    return QFont{u"Noto Sans"_s, 12};
}

StyleProperty testStylePropertyInstance();
PaletteProperty testPalettePropertyInstance();
SizesProperty testSizesPropertyInstance();
SizeProperty testSizePropertyInstance();
TextProperty testTextPropertyInstance();
IndicatorProperty testIndicatorPropertyInstance();
BackgroundProperty testBackgroundPropertyInstance();
ImageProperty testImagePropertyInstance();
BorderProperty testBorderPropertyInstance();
CornersProperty testCornersPropertyInstance();
CornerProperty testCornerPropertyInstance();
ShadowProperty testShadowPropertyInstance();

StyleProperty testStylePropertyInstance()
{
    StyleProperty instance;

    instance.setPalette(testPalettePropertyInstance());
    instance.setSizes(testSizesPropertyInstance());
    instance.setText(testTextPropertyInstance());
    instance.setIndicator(testIndicatorPropertyInstance());
    instance.setBackground(testBackgroundPropertyInstance());

    return instance;
}

PaletteProperty testPalettePropertyInstance()
{
    PaletteProperty instance;

    instance.setForeground(testQColorInstance());
    instance.setBackground(testQColorInstance());
    instance.setAccent(testQColorInstance());

    return instance;
}

SizesProperty testSizesPropertyInstance()
{
    SizesProperty instance;

    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setSpacing(testQrealInstance());
    instance.setPadding(testSizePropertyInstance());
    instance.setMargins(testSizePropertyInstance());

    return instance;
}

SizeProperty testSizePropertyInstance()
{
    SizeProperty instance;

    instance.setLeft(testQrealInstance());
    instance.setRight(testQrealInstance());
    instance.setTop(testQrealInstance());
    instance.setBottom(testQrealInstance());

    return instance;
}

TextProperty testTextPropertyInstance()
{
    TextProperty instance;

    instance.setAlignment(Qt::Alignment{});
    instance.setColor(testQColorInstance());
    instance.setFont(testQFontInstance());

    return instance;
}

IndicatorProperty testIndicatorPropertyInstance()
{
    IndicatorProperty instance;

    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setAlignment(Qt::Alignment{});

    return instance;
}

BackgroundProperty testBackgroundPropertyInstance()
{
    BackgroundProperty instance;

    instance.setColor(testQColorInstance());
    instance.setImage(testImagePropertyInstance());
    instance.setBorder(testBorderPropertyInstance());
    instance.setCorners(testCornersPropertyInstance());
    instance.setShadow(testShadowPropertyInstance());

    return instance;
}

ImageProperty testImagePropertyInstance()
{
    ImageProperty instance;

    instance.setImageData(QImage{});
    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setXOffset(testQrealInstance());
    instance.setYOffset(testQrealInstance());
    instance.setFlags(Union::Properties::ImageFlags{});

    return instance;
}

BorderProperty testBorderPropertyInstance()
{
    BorderProperty instance;

    instance.setSize(testQrealInstance());
    instance.setColor(testQColorInstance());
    instance.setStyle(Union::Properties::LineStyle{});
    instance.setImage(testImagePropertyInstance());

    return instance;
}

CornersProperty testCornersPropertyInstance()
{
    CornersProperty instance;

    instance.setTopLeft(testCornerPropertyInstance());
    instance.setTopRight(testCornerPropertyInstance());
    instance.setBottomLeft(testCornerPropertyInstance());
    instance.setBottomRight(testCornerPropertyInstance());

    return instance;
}

CornerProperty testCornerPropertyInstance()
{
    CornerProperty instance;

    instance.setRadius(testQrealInstance());
    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setColor(testQColorInstance());
    instance.setImage(testImagePropertyInstance());

    return instance;
}

ShadowProperty testShadowPropertyInstance()
{
    ShadowProperty instance;

    instance.setOffsets(testSizePropertyInstance());
    instance.setLeft(testBorderPropertyInstance());
    instance.setRight(testBorderPropertyInstance());
    instance.setTop(testBorderPropertyInstance());
    instance.setBottom(testBorderPropertyInstance());
    instance.setTopLeft(testCornerPropertyInstance());
    instance.setTopRight(testCornerPropertyInstance());
    instance.setBottomLeft(testCornerPropertyInstance());
    instance.setBottomRight(testCornerPropertyInstance());

    return instance;
}

}
}