{#
    SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
    SPDX-FileCopyrightText: 2024 Arjen Hiemstra <ahiemstra@heimr.nl>

    This is the template that is used to generate tests for property classes. It uses Jinja 2 syntax.
#}
// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `generate_properties.py`.

#pragma once

#include <QtTest>

{% for type in types | sort %}
#include "../{{ type.type_name }}.h"
{% endfor %}

using namespace Qt::StringLiterals;

namespace Union
{
namespace Properties
{

QColor testQColorInstance()
{
    return Qt::magenta;
}

qreal testQrealInstance()
{
    return 10.0;
}

QFont testQFontInstance()
{
    return QFont{u"Noto Sans"_s, 12};
}

{% for type in types %}
{{ type.type_name }} test{{ type.type_name }}Instance();
{% endfor %}

{% for type in types %}
{{ type.type_name }} test{{type.type_name}}Instance()
{
    {{ type.type_name }} instance;

{% for value in type.values %}
{% if value.is_property %}
    instance.set{{ value.name | ucfirst }}(test{{ value.type }}Instance());
{% elif value.type == "QColor" %}
    instance.set{{ value.name | ucfirst }}(testQColorInstance());
{% elif value.type == "qreal" %}
    instance.set{{ value.name | ucfirst }}(testQrealInstance());
{% elif value.type == "QFont" %}
    instance.set{{ value.name | ucfirst }}(testQFontInstance());
{% else %}
    instance.set{{ value.name | ucfirst }}({{ value.type }}{});
{% endif %}
{% endfor %}

    return instance;
}

{% endfor %}
}
}
