// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
// SPDX-FileCopyrightText: 2024 Arjen Hiemstra <ahiemstra@heimr.nl>
//
// This file is automatically generated from qml_group.cpp.j2.
// To regenerate, run `tools/propertygenerator/generate_properties.py`.

#include "ImagePropertyGroup.h"

#include <QQmlEngine>

#include "QuickStyle.h"

using namespace Union::Properties;
using namespace Qt::StringLiterals;

ImagePropertyGroup::ImagePropertyGroup(QuickStyle *style)
    : QObject()
    , m_style(style)
{
}

void ImagePropertyGroup::update(const ImageProperty &newState)
{
    m_state = newState;
    Q_EMIT imageDataChanged();
    Q_EMIT widthChanged();
    Q_EMIT heightChanged();
    Q_EMIT xOffsetChanged();
    Q_EMIT yOffsetChanged();
    Q_EMIT flagsChanged();

    Q_EMIT updated();
}

QJSValue ImagePropertyGroup::imageData() const
{
    auto value = m_state.imageData();
    if (value) {
        return m_style->engine()->toScriptValue(value.value());
    }

    return QJSValue(QJSValue::UndefinedValue);
}

QJSValue ImagePropertyGroup::width() const
{
    auto value = m_state.width();
    if (value) {
        return m_style->engine()->toScriptValue(value.value());
    }

    return QJSValue(QJSValue::UndefinedValue);
}

QJSValue ImagePropertyGroup::height() const
{
    auto value = m_state.height();
    if (value) {
        return m_style->engine()->toScriptValue(value.value());
    }

    return QJSValue(QJSValue::UndefinedValue);
}

QJSValue ImagePropertyGroup::xOffset() const
{
    auto value = m_state.xOffset();
    if (value) {
        return m_style->engine()->toScriptValue(value.value());
    }

    return QJSValue(QJSValue::UndefinedValue);
}

QJSValue ImagePropertyGroup::yOffset() const
{
    auto value = m_state.yOffset();
    if (value) {
        return m_style->engine()->toScriptValue(value.value());
    }

    return QJSValue(QJSValue::UndefinedValue);
}

QJSValue ImagePropertyGroup::flags() const
{
    auto value = m_state.flags();
    if (value) {
        return m_style->engine()->toScriptValue(value.value());
    }

    return QJSValue(QJSValue::UndefinedValue);
}

#include "moc_ImagePropertyGroup.cpp"