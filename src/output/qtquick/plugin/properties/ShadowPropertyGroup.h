// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
// SPDX-FileCopyrightText: 2024 Arjen Hiemstra <ahiemstra@heimr.nl>
//
// This file is automatically generated from qml_group.h.j2.
// To regenerate, run `tools/propertygenerator/generate_properties.py`.

#pragma once

// clang-format off
#include <QJSValue>
#include <QObject>
#include <QProperty>
#include <qqmlregistration.h>


#include <properties/ShadowProperty.h>

#include "SizePropertyGroup.h"
#include "LinePropertyGroup.h"
#include "LinePropertyGroup.h"
#include "LinePropertyGroup.h"
#include "LinePropertyGroup.h"
#include "CornerPropertyGroup.h"
#include "CornerPropertyGroup.h"
#include "CornerPropertyGroup.h"
#include "CornerPropertyGroup.h"
// clang-format on

class QuickStyle;

class ShadowPropertyGroup : public QObject
{
    Q_OBJECT
    QML_ANONYMOUS

public:
    explicit ShadowPropertyGroup(QuickStyle *style);

    void update(const Union::Properties::ShadowProperty &newState);
    Q_SIGNAL void updated();

    Q_PROPERTY(SizePropertyGroup *offsets READ offsets CONSTANT)
    SizePropertyGroup *offsets() const;

    Q_PROPERTY(LinePropertyGroup *left READ left CONSTANT)
    LinePropertyGroup *left() const;

    Q_PROPERTY(LinePropertyGroup *right READ right CONSTANT)
    LinePropertyGroup *right() const;

    Q_PROPERTY(LinePropertyGroup *top READ top CONSTANT)
    LinePropertyGroup *top() const;

    Q_PROPERTY(LinePropertyGroup *bottom READ bottom CONSTANT)
    LinePropertyGroup *bottom() const;

    Q_PROPERTY(CornerPropertyGroup *topLeft READ topLeft CONSTANT)
    CornerPropertyGroup *topLeft() const;

    Q_PROPERTY(CornerPropertyGroup *topRight READ topRight CONSTANT)
    CornerPropertyGroup *topRight() const;

    Q_PROPERTY(CornerPropertyGroup *bottomLeft READ bottomLeft CONSTANT)
    CornerPropertyGroup *bottomLeft() const;

    Q_PROPERTY(CornerPropertyGroup *bottomRight READ bottomRight CONSTANT)
    CornerPropertyGroup *bottomRight() const;

private:
    QuickStyle *m_style = nullptr;
    std::unique_ptr<SizePropertyGroup> m_offsets;
    std::unique_ptr<LinePropertyGroup> m_left;
    std::unique_ptr<LinePropertyGroup> m_right;
    std::unique_ptr<LinePropertyGroup> m_top;
    std::unique_ptr<LinePropertyGroup> m_bottom;
    std::unique_ptr<CornerPropertyGroup> m_topLeft;
    std::unique_ptr<CornerPropertyGroup> m_topRight;
    std::unique_ptr<CornerPropertyGroup> m_bottomLeft;
    std::unique_ptr<CornerPropertyGroup> m_bottomRight;
    Union::Properties::ShadowProperty m_state;
};