// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#pragma once

// clang-format off
#include <QJSValue>
#include <QObject>
#include <QProperty>
#include <qqmlregistration.h>


#include <properties/BackgroundProperty.h>

#include "ImagePropertyGroup.h"
#include "BorderPropertyGroup.h"
#include "CornersPropertyGroup.h"
#include "ShadowPropertyGroup.h"
// clang-format on

class QuickStyle;

class BackgroundPropertyGroup : public QObject
{
    Q_OBJECT
    QML_ANONYMOUS

public:
    explicit BackgroundPropertyGroup(QuickStyle *style);

    void update(const Union::Properties::BackgroundProperty &newState);
    Q_SIGNAL void updated();

    Q_PROPERTY(QJSValue color READ color NOTIFY colorChanged)
    QJSValue color() const;
    Q_SIGNAL void colorChanged();

    Q_PROPERTY(ImagePropertyGroup *image READ image CONSTANT)
    ImagePropertyGroup *image() const;

    Q_PROPERTY(BorderPropertyGroup *border READ border CONSTANT)
    BorderPropertyGroup *border() const;

    Q_PROPERTY(CornersPropertyGroup *corners READ corners CONSTANT)
    CornersPropertyGroup *corners() const;

    Q_PROPERTY(ShadowPropertyGroup *shadow READ shadow CONSTANT)
    ShadowPropertyGroup *shadow() const;

private:
    QuickStyle *m_style = nullptr;
    std::unique_ptr<ImagePropertyGroup> m_image;
    std::unique_ptr<BorderPropertyGroup> m_border;
    std::unique_ptr<CornersPropertyGroup> m_corners;
    std::unique_ptr<ShadowPropertyGroup> m_shadow;
    Union::Properties::BackgroundProperty m_state;
};