// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#pragma once

// clang-format off
#include <QObject>
#include <QProperty>
#include <qqmlregistration.h>


#include <properties/StyleProperty.h>

#include "PalettePropertyGroup.h"
#include "LayoutPropertyGroup.h"
#include "TextPropertyGroup.h"
#include "IconPropertyGroup.h"
#include "BackgroundPropertyGroup.h"
// clang-format on

class StylePropertyGroup : public QObject
{
    Q_OBJECT
    QML_ANONYMOUS

public:
    StylePropertyGroup();

    void update(const Union::Properties::StyleProperty &newState);

    Q_PROPERTY(PalettePropertyGroup *palette READ palette CONSTANT)
    PalettePropertyGroup *palette() const;

    Q_PROPERTY(LayoutPropertyGroup *layout READ layout CONSTANT)
    LayoutPropertyGroup *layout() const;

    Q_PROPERTY(TextPropertyGroup *text READ text CONSTANT)
    TextPropertyGroup *text() const;

    Q_PROPERTY(IconPropertyGroup *icon READ icon CONSTANT)
    IconPropertyGroup *icon() const;

    Q_PROPERTY(BackgroundPropertyGroup *background READ background CONSTANT)
    BackgroundPropertyGroup *background() const;

private:
    std::unique_ptr<PalettePropertyGroup> m_palette;
    std::unique_ptr<LayoutPropertyGroup> m_layout;
    std::unique_ptr<TextPropertyGroup> m_text;
    std::unique_ptr<IconPropertyGroup> m_icon;
    std::unique_ptr<BackgroundPropertyGroup> m_background;
};