// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#include "TextPropertyGroup.h"

using namespace Union::Properties;
using namespace Qt::StringLiterals;

TextPropertyGroup::TextPropertyGroup()
{
    m_alignment = std::make_unique<AlignmentPropertyGroup>();
}

void TextPropertyGroup::update(const TextProperty &newState)
{
    m_alignment->update(newState.alignment().value_or(AlignmentProperty{}));
    m_color = newState.color().value_or(QColor{});
    m_font = newState.font().value_or(QFont{});
}

AlignmentPropertyGroup *TextPropertyGroup::alignment() const
{
    return m_alignment.get();
}

QColor TextPropertyGroup::color() const
{
    return m_color;
}

void TextPropertyGroup::setColor(const QColor &newValue)
{
    m_color = newValue;
}

QBindable<QColor> TextPropertyGroup::bindableColor()
{
    return QBindable<QColor>(&m_color);
}

QFont TextPropertyGroup::font() const
{
    return m_font;
}

void TextPropertyGroup::setFont(const QFont &newValue)
{
    m_font = newValue;
}

QBindable<QFont> TextPropertyGroup::bindableFont()
{
    return QBindable<QFont>(&m_font);
}

#include "moc_TextPropertyGroup.cpp"