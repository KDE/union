// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#pragma once

// clang-format off
#include <QObject>
#include <QProperty>
#include <qqmlregistration.h>

#include <QColor>
#include <QString>
#include <QUrl>

#include <properties/IconProperty.h>

#include "AlignmentPropertyGroup.h"
// clang-format on

class IconPropertyGroup : public QObject
{
    Q_OBJECT
    QML_ANONYMOUS

public:
    IconPropertyGroup();

    void update(const Union::Properties::IconProperty &newState);

    Q_PROPERTY(AlignmentPropertyGroup *alignment READ alignment CONSTANT)
    AlignmentPropertyGroup *alignment() const;

    Q_PROPERTY(qreal width READ width WRITE setWidth BINDABLE bindableWidth NOTIFY widthChanged)
    qreal width() const;
    void setWidth(const qreal &newValue);
    QBindable<qreal> bindableWidth();
    Q_SIGNAL void widthChanged();

    Q_PROPERTY(qreal height READ height WRITE setHeight BINDABLE bindableHeight NOTIFY heightChanged)
    qreal height() const;
    void setHeight(const qreal &newValue);
    QBindable<qreal> bindableHeight();
    Q_SIGNAL void heightChanged();

    Q_PROPERTY(QColor color READ color WRITE setColor BINDABLE bindableColor NOTIFY colorChanged)
    QColor color() const;
    void setColor(const QColor &newValue);
    QBindable<QColor> bindableColor();
    Q_SIGNAL void colorChanged();

    Q_PROPERTY(QString name READ name WRITE setName BINDABLE bindableName NOTIFY nameChanged)
    QString name() const;
    void setName(const QString &newValue);
    QBindable<QString> bindableName();
    Q_SIGNAL void nameChanged();

    Q_PROPERTY(QUrl source READ source WRITE setSource BINDABLE bindableSource NOTIFY sourceChanged)
    QUrl source() const;
    void setSource(const QUrl &newValue);
    QBindable<QUrl> bindableSource();
    Q_SIGNAL void sourceChanged();

private:
    std::unique_ptr<AlignmentPropertyGroup> m_alignment;
    Q_OBJECT_BINDABLE_PROPERTY(IconPropertyGroup, qreal, m_width, &IconPropertyGroup::widthChanged)
    Q_OBJECT_BINDABLE_PROPERTY(IconPropertyGroup, qreal, m_height, &IconPropertyGroup::heightChanged)
    Q_OBJECT_BINDABLE_PROPERTY(IconPropertyGroup, QColor, m_color, &IconPropertyGroup::colorChanged)
    Q_OBJECT_BINDABLE_PROPERTY(IconPropertyGroup, QString, m_name, &IconPropertyGroup::nameChanged)
    Q_OBJECT_BINDABLE_PROPERTY(IconPropertyGroup, QUrl, m_source, &IconPropertyGroup::sourceChanged)
};