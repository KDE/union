// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#include "BorderPropertyGroup.h"

using namespace Union::Properties;
using namespace Qt::StringLiterals;

BorderPropertyGroup::BorderPropertyGroup()
{
    m_left = std::make_unique<LinePropertyGroup>();
    m_right = std::make_unique<LinePropertyGroup>();
    m_top = std::make_unique<LinePropertyGroup>();
    m_bottom = std::make_unique<LinePropertyGroup>();
}

void BorderPropertyGroup::update(const BorderProperty &newState)
{
    m_state = newState;
    m_left->update(newState.left().value_or(LineProperty{}));
    m_right->update(newState.right().value_or(LineProperty{}));
    m_top->update(newState.top().value_or(LineProperty{}));
    m_bottom->update(newState.bottom().value_or(LineProperty{}));

    Q_EMIT updated();
}

LinePropertyGroup *BorderPropertyGroup::left() const
{
    return m_left.get();
}

LinePropertyGroup *BorderPropertyGroup::right() const
{
    return m_right.get();
}

LinePropertyGroup *BorderPropertyGroup::top() const
{
    return m_top.get();
}

LinePropertyGroup *BorderPropertyGroup::bottom() const
{
    return m_bottom.get();
}

#include "moc_BorderPropertyGroup.cpp"