// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#include "IconPropertyGroup.h"

using namespace Union::Properties;
using namespace Qt::StringLiterals;

IconPropertyGroup::IconPropertyGroup()
{
}

void IconPropertyGroup::update(const IconProperty &newState)
{
    m_width = newState.width().value_or(qreal{});
    m_height = newState.height().value_or(qreal{});
    m_color = newState.color().value_or(QColor{});
    m_name = newState.name().value_or(QString{});
    m_source = newState.source().value_or(QUrl{});
}

qreal IconPropertyGroup::width() const
{
    return m_width;
}

void IconPropertyGroup::setWidth(const qreal &newValue)
{
    m_width = newValue;
}

QBindable<qreal> IconPropertyGroup::bindableWidth()
{
    return QBindable<qreal>(&m_width);
}

qreal IconPropertyGroup::height() const
{
    return m_height;
}

void IconPropertyGroup::setHeight(const qreal &newValue)
{
    m_height = newValue;
}

QBindable<qreal> IconPropertyGroup::bindableHeight()
{
    return QBindable<qreal>(&m_height);
}

QColor IconPropertyGroup::color() const
{
    return m_color;
}

void IconPropertyGroup::setColor(const QColor &newValue)
{
    m_color = newValue;
}

QBindable<QColor> IconPropertyGroup::bindableColor()
{
    return QBindable<QColor>(&m_color);
}

QString IconPropertyGroup::name() const
{
    return m_name;
}

void IconPropertyGroup::setName(const QString &newValue)
{
    m_name = newValue;
}

QBindable<QString> IconPropertyGroup::bindableName()
{
    return QBindable<QString>(&m_name);
}

QUrl IconPropertyGroup::source() const
{
    return m_source;
}

void IconPropertyGroup::setSource(const QUrl &newValue)
{
    m_source = newValue;
}

QBindable<QUrl> IconPropertyGroup::bindableSource()
{
    return QBindable<QUrl>(&m_source);
}

#include "moc_IconPropertyGroup.cpp"