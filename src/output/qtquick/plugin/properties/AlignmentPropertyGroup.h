// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#pragma once

// clang-format off
#include <QObject>
#include <QProperty>
#include <qqmlregistration.h>


#include <properties/AlignmentProperty.h>

// clang-format on

class AlignmentPropertyGroup : public QObject
{
    Q_OBJECT
    QML_ANONYMOUS

public:
    AlignmentPropertyGroup();

    void update(const Union::Properties::AlignmentProperty &newState);

    Q_PROPERTY(Union::Properties::AlignmentContainer container READ container WRITE setContainer BINDABLE bindableContainer NOTIFY containerChanged)
    Union::Properties::AlignmentContainer container() const;
    void setContainer(const Union::Properties::AlignmentContainer &newValue);
    QBindable<Union::Properties::AlignmentContainer> bindableContainer();
    Q_SIGNAL void containerChanged();

    Q_PROPERTY(Union::Properties::Alignment horizontal READ horizontal WRITE setHorizontal BINDABLE bindableHorizontal NOTIFY horizontalChanged)
    Union::Properties::Alignment horizontal() const;
    void setHorizontal(const Union::Properties::Alignment &newValue);
    QBindable<Union::Properties::Alignment> bindableHorizontal();
    Q_SIGNAL void horizontalChanged();

    Q_PROPERTY(Union::Properties::Alignment vertical READ vertical WRITE setVertical BINDABLE bindableVertical NOTIFY verticalChanged)
    Union::Properties::Alignment vertical() const;
    void setVertical(const Union::Properties::Alignment &newValue);
    QBindable<Union::Properties::Alignment> bindableVertical();
    Q_SIGNAL void verticalChanged();

    Q_PROPERTY(int order READ order WRITE setOrder BINDABLE bindableOrder NOTIFY orderChanged)
    int order() const;
    void setOrder(const int &newValue);
    QBindable<int> bindableOrder();
    Q_SIGNAL void orderChanged();

private:
    Q_OBJECT_BINDABLE_PROPERTY(AlignmentPropertyGroup, Union::Properties::AlignmentContainer, m_container, &AlignmentPropertyGroup::containerChanged)
    Q_OBJECT_BINDABLE_PROPERTY(AlignmentPropertyGroup, Union::Properties::Alignment, m_horizontal, &AlignmentPropertyGroup::horizontalChanged)
    Q_OBJECT_BINDABLE_PROPERTY(AlignmentPropertyGroup, Union::Properties::Alignment, m_vertical, &AlignmentPropertyGroup::verticalChanged)
    Q_OBJECT_BINDABLE_PROPERTY(AlignmentPropertyGroup, int, m_order, &AlignmentPropertyGroup::orderChanged)
};