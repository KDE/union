// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `tools/propertygenerator/generate_properties.py`.

#include "CornersPropertyGroup.h"

using namespace Union::Properties;
using namespace Qt::StringLiterals;

CornersPropertyGroup::CornersPropertyGroup()
{
    m_topLeft = std::make_unique<CornerPropertyGroup>();
    m_topRight = std::make_unique<CornerPropertyGroup>();
    m_bottomLeft = std::make_unique<CornerPropertyGroup>();
    m_bottomRight = std::make_unique<CornerPropertyGroup>();
}

void CornersPropertyGroup::update(const CornersProperty &newState)
{
    m_topLeft->update(newState.topLeft().value_or(CornerProperty{}));
    m_topRight->update(newState.topRight().value_or(CornerProperty{}));
    m_bottomLeft->update(newState.bottomLeft().value_or(CornerProperty{}));
    m_bottomRight->update(newState.bottomRight().value_or(CornerProperty{}));
}

CornerPropertyGroup *CornersPropertyGroup::topLeft() const
{
    return m_topLeft.get();
}

CornerPropertyGroup *CornersPropertyGroup::topRight() const
{
    return m_topRight.get();
}

CornerPropertyGroup *CornersPropertyGroup::bottomLeft() const
{
    return m_bottomLeft.get();
}

CornerPropertyGroup *CornersPropertyGroup::bottomRight() const
{
    return m_bottomRight.get();
}

#include "moc_CornersPropertyGroup.cpp"