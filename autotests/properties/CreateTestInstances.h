// SPDX-License-Identifier: LGPL-2.1-only OR LGPL-3.0-only OR LicenseRef-KDE-Accepted-LGPL
//
// This file is automatically generated. To regenerate, run `generate_properties.py`.

#pragma once

#include <QtTest>

#include <properties/AlignmentProperty.h>
#include <properties/BackgroundProperty.h>
#include <properties/BorderProperty.h>
#include <properties/CornerProperty.h>
#include <properties/CornersProperty.h>
#include <properties/IconProperty.h>
#include <properties/ImageProperty.h>
#include <properties/LayoutProperty.h>
#include <properties/LineProperty.h>
#include <properties/PaletteProperty.h>
#include <properties/ShadowProperty.h>
#include <properties/SizeProperty.h>
#include <properties/StyleProperty.h>
#include <properties/TextProperty.h>

using namespace Qt::StringLiterals;

namespace Union
{
namespace Properties
{

QColor testQColorInstance()
{
    return Qt::magenta;
}

qreal testQrealInstance()
{
    return 10.0;
}

QFont testQFontInstance()
{
    return QFont{u"Noto Sans"_s, 12};
}

StyleProperty testStylePropertyInstance();
PaletteProperty testPalettePropertyInstance();
LayoutProperty testLayoutPropertyInstance();
AlignmentProperty testAlignmentPropertyInstance();
SizeProperty testSizePropertyInstance();
TextProperty testTextPropertyInstance();
IconProperty testIconPropertyInstance();
BackgroundProperty testBackgroundPropertyInstance();
ImageProperty testImagePropertyInstance();
BorderProperty testBorderPropertyInstance();
LineProperty testLinePropertyInstance();
CornersProperty testCornersPropertyInstance();
CornerProperty testCornerPropertyInstance();
ShadowProperty testShadowPropertyInstance();

StyleProperty testStylePropertyInstance()
{
    StyleProperty instance;

    instance.setPalette(testPalettePropertyInstance());
    instance.setLayout(testLayoutPropertyInstance());
    instance.setText(testTextPropertyInstance());
    instance.setIcon(testIconPropertyInstance());
    instance.setBackground(testBackgroundPropertyInstance());

    return instance;
}

PaletteProperty testPalettePropertyInstance()
{
    PaletteProperty instance;

    instance.setAccent(testQColorInstance());
    instance.setAlternateBase(testQColorInstance());
    instance.setBase(testQColorInstance());
    instance.setBrightText(testQColorInstance());
    instance.setButton(testQColorInstance());
    instance.setButtonText(testQColorInstance());
    instance.setDark(testQColorInstance());
    instance.setHighlight(testQColorInstance());
    instance.setHighlightedText(testQColorInstance());
    instance.setLight(testQColorInstance());
    instance.setLink(testQColorInstance());
    instance.setLinkVisited(testQColorInstance());
    instance.setMid(testQColorInstance());
    instance.setMidlight(testQColorInstance());
    instance.setPlaceholderText(testQColorInstance());
    instance.setShadow(testQColorInstance());
    instance.setText(testQColorInstance());
    instance.setToolTipBase(testQColorInstance());
    instance.setToolTipText(testQColorInstance());
    instance.setWindow(testQColorInstance());
    instance.setWindowText(testQColorInstance());
    instance.setPositive(testQColorInstance());
    instance.setNeutral(testQColorInstance());
    instance.setNegative(testQColorInstance());

    return instance;
}

LayoutProperty testLayoutPropertyInstance()
{
    LayoutProperty instance;

    instance.setAlignment(testAlignmentPropertyInstance());
    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setSpacing(testQrealInstance());
    instance.setPadding(testSizePropertyInstance());
    instance.setInset(testSizePropertyInstance());
    instance.setMargins(testSizePropertyInstance());

    return instance;
}

AlignmentProperty testAlignmentPropertyInstance()
{
    AlignmentProperty instance;

    instance.setContainer(Union::Properties::AlignmentContainer{});
    instance.setHorizontal(Union::Properties::Alignment{});
    instance.setVertical(Union::Properties::Alignment{});
    instance.setOrder(int{});

    return instance;
}

SizeProperty testSizePropertyInstance()
{
    SizeProperty instance;

    instance.setLeft(testQrealInstance());
    instance.setRight(testQrealInstance());
    instance.setTop(testQrealInstance());
    instance.setBottom(testQrealInstance());

    return instance;
}

TextProperty testTextPropertyInstance()
{
    TextProperty instance;

    instance.setAlignment(testAlignmentPropertyInstance());
    instance.setFont(testQFontInstance());

    return instance;
}

IconProperty testIconPropertyInstance()
{
    IconProperty instance;

    instance.setAlignment(testAlignmentPropertyInstance());
    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setName(QString{});
    instance.setSource(QUrl{});

    return instance;
}

BackgroundProperty testBackgroundPropertyInstance()
{
    BackgroundProperty instance;

    instance.setColor(testQColorInstance());
    instance.setImage(testImagePropertyInstance());
    instance.setBorder(testBorderPropertyInstance());
    instance.setCorners(testCornersPropertyInstance());
    instance.setShadow(testShadowPropertyInstance());

    return instance;
}

ImageProperty testImagePropertyInstance()
{
    ImageProperty instance;

    instance.setImageData(QImage{});
    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setXOffset(testQrealInstance());
    instance.setYOffset(testQrealInstance());
    instance.setFlags(Union::Properties::ImageFlags{});

    return instance;
}

BorderProperty testBorderPropertyInstance()
{
    BorderProperty instance;

    instance.setLeft(testLinePropertyInstance());
    instance.setRight(testLinePropertyInstance());
    instance.setTop(testLinePropertyInstance());
    instance.setBottom(testLinePropertyInstance());

    return instance;
}

LineProperty testLinePropertyInstance()
{
    LineProperty instance;

    instance.setSize(testQrealInstance());
    instance.setColor(testQColorInstance());
    instance.setStyle(Union::Properties::LineStyle{});
    instance.setImage(testImagePropertyInstance());

    return instance;
}

CornersProperty testCornersPropertyInstance()
{
    CornersProperty instance;

    instance.setTopLeft(testCornerPropertyInstance());
    instance.setTopRight(testCornerPropertyInstance());
    instance.setBottomLeft(testCornerPropertyInstance());
    instance.setBottomRight(testCornerPropertyInstance());

    return instance;
}

CornerProperty testCornerPropertyInstance()
{
    CornerProperty instance;

    instance.setRadius(testQrealInstance());
    instance.setWidth(testQrealInstance());
    instance.setHeight(testQrealInstance());
    instance.setColor(testQColorInstance());
    instance.setImage(testImagePropertyInstance());

    return instance;
}

ShadowProperty testShadowPropertyInstance()
{
    ShadowProperty instance;

    instance.setOffsets(testSizePropertyInstance());
    instance.setLeft(testLinePropertyInstance());
    instance.setRight(testLinePropertyInstance());
    instance.setTop(testLinePropertyInstance());
    instance.setBottom(testLinePropertyInstance());
    instance.setTopLeft(testCornerPropertyInstance());
    instance.setTopRight(testCornerPropertyInstance());
    instance.setBottomLeft(testCornerPropertyInstance());
    instance.setBottomRight(testCornerPropertyInstance());

    return instance;
}

}
}